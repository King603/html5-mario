import * as Enjine from "../Enjine/index.js";
export declare class MapState extends Enjine.GameState {
    camera: Enjine.Camera;
    Level: number[][];
    Data: number[][];
    YFarthestCap: number;
    XFarthestCap: number;
    Farthest: number;
    LevelId: number;
    MoveTime: number;
    YMarioA: number;
    XMarioA: number;
    YMario: number;
    XMario: number;
    MapImage: HTMLCanvasElement;
    MapContext: any;
    EnterLevel: boolean;
    CanEnterLevel: boolean;
    LevelType: number;
    LevelDifficulty: number;
    WorldNumber: number;
    WaterSprite?: Enjine.AnimatedSprite;
    DecoSprite?: Enjine.AnimatedSprite;
    HelpSprite?: Enjine.AnimatedSprite;
    SmallMario?: Enjine.AnimatedSprite;
    LargeMario?: Enjine.AnimatedSprite;
    FontShadow?: Enjine.SpriteFont;
    Font?: Enjine.SpriteFont;
    constructor();
    Enter(): void;
    Exit(): void;
    NextWorld(): void;
    GenerateLevel(): boolean;
    FindConnection(width: number, height: number): boolean;
    Connect(X: number, Y: number, width: number, height: number): void;
    DrawRoad(x1: number, y1: number, x2: number, y2: number): void;
    FindCaps(width: number, height: number): void;
    Travel(x: number, y: number, c: number, e: number): void;
    RenderStatic(): void;
    IsRoad(x: number, y: number): boolean;
    IsWater(x: number, y: number): boolean;
    Update(sprite: number): void;
    TryWalking(moveX: number, moveY: number): void;
    CalcDistance(x: number, y: number, moveX: number, moveY: number): number;
    Draw(a: CanvasRenderingContext2D): void;
    LevelWon(): void;
    GetX(): number;
    GetY(): number;
    CheckForChange(ctx: Enjine.GameStateContext): void;
}
